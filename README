LOGEN is an offline partial evaluation system for Prolog written using the so called "cogen approach".
Basically, the cogen is a system which: based upon an annotated version of the program to be specialised produces a specialised partial evaluator for that program.
This partial evaluator is called a generating extension the generating extension can be used to specialise the program in a very efficient manner.

Once downloaded you can test the installation with:
 make cogen
 make test

This should finish without errors.

To compile:
 make

To specialise:
 bin/logen PlFile "goal(A,B)"
You should also set the LOGEN_DIR (or LOGEN_HOME) environment variable to point to this
directory (i.e., the one containing this README file). Alternatively, you can pass
the --logen_dir D switch to logen.

For help:
 bin/logen --help

Output gx files should be standalone ciao executables.  So after
specialising match.pl, match.pl.gx.cpx should be the executable.
 ./match.pl.gx.cpx --help
 ./match.pl.gx.cpx "match([a,a,b],R)"

Logen requires annotation files (ending with .ann) for every Prolog source file that has to be specialised.
To generate annotation files you may want to use the binding-time analysis provided in another project: https://github.com/leuschel/logen.